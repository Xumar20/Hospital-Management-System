-- Insert data into the PatientDetails table using the procedure
BEGIN
  HMS_Insert_Package.InsertPatient(
    1,  'John','Doe','M',TO_DATE('1980-01-15', 'YYYY-MM-DD'),'123-456-7890','johndoe@email.com','123 Main St','Insurance XYZ', 'No significant medical history');
END;
BEGIN
  HMS_Insert_Package.InsertPatient(
    2,  'Tom','Drey','M',TO_DATE('1983-01-15', 'YYYY-MM-DD'),'123-456-790','tomdoe@email.com','13 Main St','Insurance PYZ', 'No significant medical history');
END;

BEGIN
  HMS_Insert_Package.InsertPatient(
    p_PatientID => 3,
    p_FirstName => 'Alice',
    p_LastName => 'Smith',
    p_Gender => 'F',
    p_DateOfBirth => TO_DATE('1985-05-20', 'YYYY-MM-DD'),
    p_Phone => '987-654-3210',
    p_Email => 'alice.smith@example.com',
    p_Address => '456 Elm Street',
    p_InsuranceInfo => 'ABC Insurance',
    p_MedicalHistory => 'Allergies: None'
  );
  COMMIT; -- Commit the transaction
END;
/

BEGIN
  HMS_Insert_Package.InsertPatient(
    p_PatientID => 4,
    p_FirstName => 'Emily',
    p_LastName => 'Johnson',
    p_Gender => 'F',
    p_DateOfBirth => TO_DATE('1992-08-10', 'YYYY-MM-DD'),
    p_Phone => '555-123-4567',
    p_Email => 'emily.johnson@example.com',
    p_Address => '789 Oak Avenue',
    p_InsuranceInfo => 'DEF Insurance',
    p_MedicalHistory => 'Previous surgery: Appendectomy'
  );
  COMMIT; -- Commit the transaction
END;
/

BEGIN
  HMS_Insert_Package.InsertPatient(
    p_PatientID => 5,
    p_FirstName => 'Mary',
    p_LastName => 'Johnson',
    p_Gender => 'F',
    p_DateOfBirth => TO_DATE('1992-08-10', 'YYYY-MM-DD'),
    p_Phone => '555-123-4567',
    p_Email => 'mary.johnson@example.com',
    p_Address => '789 Oak Avenue',
    p_InsuranceInfo => 'XYZ Health Insurance',
    p_MedicalHistory => 'Previous surgeries: None'
  );
  COMMIT; -- Commit the transaction
END;
/


-- Insert data into the DoctorInformation table using the procedure
BEGIN
  HMS_Insert_Package.InsertDoctor(
    p_DoctorID => 1,
    p_FirstName => 'John',
    p_LastName => 'Smith',
    p_Specialization => 'Cardiology',
    p_ContactInfo => 'john.smith@email.com'
  );

  HMS_Insert_Package.InsertDoctor(
    p_DoctorID => 2,
    p_FirstName => 'Mary',
    p_LastName => 'Johnson',
    p_Specialization => 'Pediatrics',
    p_ContactInfo => 'mary.johnson@email.com'
  );
  COMMIT;
END;



-- Insert data into the Appointment table using the procedure
BEGIN
  HMS_Insert_Package.InsertAppointment(
    p_AppointmentID => 1,
    p_PatientID => 1,
    p_DoctorID => 1,
    p_AppointmentDateTime => TO_TIMESTAMP('2023-09-15 10:00:00', 'YYYY-MM-DD HH24:MI:SS'),
    p_Purpose => 'Annual Checkup',
    p_Status => 'Confirmed'
  );

  HMS_Insert_Package.InsertAppointment(
    p_AppointmentID => 2,
    p_PatientID => 2,
    p_DoctorID => 2,
    p_AppointmentDateTime => TO_TIMESTAMP('2023-09-17 14:30:00', 'YYYY-MM-DD HH24:MI:SS'),
    p_Purpose => 'Flu Symptoms',
    p_Status => 'Confirmed'
  );


  COMMIT; -- Commit the transaction
END;
/


-- Insert data into the MedicalRecords table using the procedure
BEGIN
  HMS_Insert_Package.InsertMedicalRecord(
    p_RecordID =>1,
    p_PatientID => 1,
    p_DoctorID => 2,
    p_DateOfVisit => TO_DATE('2023-09-15', 'YYYY-MM-DD'),
    p_Diagnosis => 'Fever',
    p_Prescription => 'Take rest and stay hydrated',
    p_LabTestResults => 'No abnormal results',
    p_Notes => 'Patient should follow up in a week'
  );

  HMS_Insert_Package.InsertMedicalRecord(
    p_RecordID =>2,
    p_PatientID => 2,
    p_DoctorID => 1,
    p_DateOfVisit => TO_DATE('2023-09-17', 'YYYY-MM-DD'),
    p_Diagnosis => 'Common cold',
    p_Prescription => 'Prescribed cold medicine',
    p_LabTestResults => 'No lab tests conducted',
    p_Notes => 'Patient advised to rest and drink fluids'
  );



-- Insert data into the Prescription table using the procedure
BEGIN
  HMS_Insert_Package.InsertPrescription(
    p_PrescriptionID => 1,
    p_PatientID => 1,
    p_DoctorID => 2,
    p_Day => TO_DATE('2023-09-16', 'YYYY-MM-DD'),
    p_MedicationName => 'MedicineName',
    p_Dosage => 'DosageValue',
    p_Frequency => 'FrequencyValue',
    p_Duration => 'DurationValue'
  );
  COMMIT;
END;



-- Insert data into Doctor Schedule Table using the package procedure
BEGIN
  HMS_Insert_Package.InsertDoctorSchedule(
    p_ScheduleID => 1,
    p_DoctorID => 1,
    p_DayOfWeek => 'Monday',
    p_StartTime => TO_TIMESTAMP('08:00:00', 'HH24:MI:SS'),
    p_EndTime => TO_TIMESTAMP('16:00:00', 'HH24:MI:SS')
  );
  COMMIT; -- Commit the transaction
END;
/



-- Insert data into BillingAndPayments Table using the package procedure
BEGIN
  HMS_Insert_Package.InsertBillingAndPayments(
    p_TransactionID => 1,               
    p_PatientID => 2,                
    p_DoctorID => 1,                 
    p_Day => TO_DATE('2023-09-16', 'YYYY-MM-DD'), 
    p_ServiceOrProcedure => 'Service/Procedure Name',  
    p_Amount => 100.00,               
    p_PaymentMethod => 'Credit Card',  
    p_PaymentStatus => 'Paid'          
  );
  COMMIT;
END;


-- Insert data into Department Table using the package procedure
BEGIN
  HMS_Insert_Package.InsertDepartment(
    p_DepartmentID => 1,
    p_DepartmentName => 'Cardiology'
  );
  COMMIT; -- Commit the transaction
END;
/


-- Insert data into UserAccount Table using the package procedure
BEGIN
  HMS_Insert_Package.InsertUserAccount(
    p_UserID => 1,
    p_Username => 'john_smith',
    p_Password => 'password123',
    p_UserType => 'Employee'
  );
  COMMIT;
END;



-- Insert data into Logs1 Table using the package procedure
BEGIN
  HMS_Insert_Package.InsertLogs1(
    p_LogID => 1,                         
    p_UserID => 1,                    
    p_ActivityAction => 'Login',         
    p_Timestamp => TO_TIMESTAMP('2023-09-16 10:30:00', 'YYYY-MM-DD HH24:MI:SS')  
  );
  COMMIT;
END;
